let getComponent;(()=>{"use strict";var e={293:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.defensives=void 0,o.defensives={DeathKnight:{48707:{name:"Anti-Magic Shell",duration:5e3,cooldown:6e4},48743:{name:"Death Pact",duration:15e3,cooldown:12e4},48792:{name:"Icebound Fortitude",duration:8e3,cooldown:18e4},49039:{name:"Lichborne",duration:1e4,cooldown:12e4},327574:{name:"Sacrificial Pact",duration:0,cooldown:12e4}},DemonHunter:{196555:{name:"Netherwalk",duration:6e3,cooldown:18e4},196718:{name:"Netherwalk",duration:6e3,cooldown:18e4},198589:{name:"Blur",duration:1e4,cooldown:6e4},212800:{name:"Blur",duration:1e4,cooldown:6e4}},Druid:{5487:{name:"Bear Form",duration:0,cooldown:0},22812:{name:"Barkskin",duration:8e3,cooldown:6e4},22842:{name:"Frenzied Regeneration",duration:3e3,cooldown:1e3},61336:{name:"Survival Instincts",duration:6e3,cooldown:18e4},108238:{name:"Renewal",duration:0,cooldown:9e4},124974:{name:"Nature's Vigil",duration:15e3,cooldown:9e4},319454:{name:"Heart of the Wild",duration:45e3,cooldown:3e5}},Evoker:{355913:{name:"Emerald Blossom",duration:1500,cooldown:3e4},360827:{name:"Blistering Scales",duration:0,cooldown:3e4},360995:{name:"Verdant Embrace",duration:0,cooldown:24e3},363916:{name:"Obsidian Scales",duration:12e3,cooldown:9e4},370888:{name:"Twin Guardian/Rescue",duration:5e3,cooldown:6e4},370960:{name:"Emerald Communion",duration:5e3,cooldown:18e4},374227:{name:"Zephyr",duration:8e3,cooldown:12e4},374348:{name:"Renewing Blaze",duration:8e3,cooldown:9e4}},Hunter:{109304:{name:"Exhilaration",duration:0,cooldown:12e4},186265:{name:"Aspect of the Turtle",duration:8e3,cooldown:18e4},264735:{name:"Survival of the Fittest",duration:6e3,cooldown:18e4},272679:{name:"Fortitude of the Bear",duration:1e4,cooldown:12e4},392956:{name:"Fortitude of the Bear",duration:1e4,cooldown:12e4}},Mage:{11426:{name:"Ice Barrier",duration:6e4,cooldown:25e3},45438:{name:"Ice Block",duration:1e4,cooldown:24e4},414658:{name:"Ice Cold",duration:6e3,cooldown:24e4},414659:{name:"Ice Cold",duration:6e3,cooldown:24e4},55342:{name:"Mirror Image",duration:4e4,cooldown:12e4},113862:{name:"Greater Invisibility",duration:3e3,cooldown:12e4},110959:{name:"Greater Invisibility",duration:3e3,cooldown:12e4},110960:{name:"Greater Invisibility",duration:3e3,cooldown:12e4},235219:{name:"Cold Snap",duration:0,cooldown:3e5},235313:{name:"Blazing Barrier",duration:6e4,cooldown:25e3},235450:{name:"Prismatic Barrier",duration:6e4,cooldown:25e3},342245:{name:"Alter Time",duration:2e4,cooldown:6e4},342246:{name:"Alter Time",duration:2e4,cooldown:6e4},342247:{name:"Alter Time",duration:2e4,cooldown:6e4}},Monk:{115203:{name:"Fortifying Brew",duration:15e3,cooldown:36e4},122278:{name:"Dampen Harm",duration:1e4,cooldown:12e4},122470:{name:"Touch of Karma",duration:1e4,cooldown:9e4},122783:{name:"Diffuse Magic",duration:6e3,cooldown:9e4}},Paladin:{498:{name:"Divine Protection",duration:8e3,cooldown:6e4},633:{name:"Lay on Hands",duration:0,cooldown:6e5},642:{name:"Divine Shield",duration:8e3,cooldown:3e5},1022:{name:"Blessing of Protection",duration:1e4,cooldown:1500},184662:{name:"Shield of Vengeance",duration:1e4,cooldown:9e4},205191:{name:"Eye for an Eye",duration:1e4,cooldown:6e4},215661:{name:"Justicar's Vengeance",duration:0,cooldown:0},403876:{name:"Divine Protection",duration:8e3,cooldown:6e4}},Priest:{586:{name:"Fade",duration:1e4,cooldown:3e4},19236:{name:"Desperate Prayer",duration:1e4,cooldown:9e4},47585:{name:"Dispersion",duration:6e3,cooldown:12e4},108968:{name:"Void Shift",duration:0,cooldown:3e5}},Rogue:{1966:{name:"Feint",duration:6e3,cooldown:15e3},5277:{name:"Evasion",duration:1e4,cooldown:12e4},31224:{name:"Cloak of Shadows",duration:5e3,cooldown:12e4},185311:{name:"Crimson Vial",duration:4e3,cooldown:3e4}},Shaman:{108270:{name:"Stone Bulwark Totem",duration:12e3,cooldown:12e4},108271:{name:"Astral Shift",duration:12e3,cooldown:12e4},108281:{name:"Ancestral Guidance",duration:6e4,cooldown:3e5},198103:{name:"Earth Elemental",duration:6e4,cooldown:3e5}},Warlock:{6789:{name:"Mortal Coil",duration:3e3,cooldown:45e3},104773:{name:"Unending Resolve",duration:8e3,cooldown:18e4},108416:{name:"Dark Pact",duration:2e4,cooldown:6e4},234153:{name:"Drain Life",duration:5e3,cooldown:0},452930:{name:"Demonic Healthstone",duration:0,cooldown:0}},Warrior:{23920:{name:"Spell Reflection",duration:5e3,cooldown:1e3},34428:{name:"Victory Rush",duration:0,cooldown:0},118038:{name:"Die by the Sword",duration:8e3,cooldown:12e4},184364:{name:"Enraged Regeneration",duration:8e3,cooldown:12e4},190456:{name:"Ignore Pain",duration:12e3,cooldown:1e3},202168:{name:"Impending Victory",duration:0,cooldown:25e3},383762:{name:"Bitter Immunity",duration:0,cooldown:18e4},386208:{name:"Defensive Stance",duration:0,cooldown:3e3}},Everyone:{6262:{name:"Healthstone",duration:0,cooldown:0,color:"#5AD81C",verticalAlign:"top",textAlign:"left",labelOffsetY:1},370511:{name:"Refreshing Healing Potion - Cast",duration:0,cooldown:3e5,color:"#E795A3",verticalAlign:"top",textAlign:"left",labelOffsetY:1},415569:{name:"Dreamwalker's Healing Potion - Cast",duration:0,cooldown:3e5,color:"#E795A3",verticalAlign:"top",textAlign:"left",labelOffsetY:1},431416:{name:"Algari Healing Potion - Cast",duration:0,cooldown:3e5,color:"#E795A3",verticalAlign:"top",textAlign:"left",labelOffsetY:1},1238009:{name:"Invigorating Healing Potion - Cast",duration:0,cooldown:3e5,color:"#E795A3",verticalAlign:"top",textAlign:"left",labelOffsetY:1}}}},9:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.referenceCasts=void 0,o.referenceCasts={400777:{color:"#F48CBA",text:"Charged Smash"},405316:{color:"#9E2B25",text:"Ancient Fury"},405821:{color:"#D7CDCC",text:"Searing Slam"},406165:{color:"#5C7457",text:"Intermission"},406333:{color:"#C69B6D",text:"Shadowlava Blast"},406678:{color:"#F3CA63",text:"Tactical Destruction"},403978:{color:"#A52422",text:"Blast Wave"},411188:{color:"#D7CDCC",text:"Traps 1"},405736:{color:"#5C7457",text:"Traps 2"},406725:{color:"#C69B6D",text:"Bomb"},404007:{color:"#638CF2",text:"Unstable Embers"},401642:{color:"#D7CDCC",text:"Mass Disintegrate"},401819:{color:"#F48CBA",text:"Glittering Surge"},402051:{color:"#D7CDCC",text:"Searing Breath"},426775:{color:"#D7CDCC",text:"Full Bloom"},421368:{color:"#F48CBA",text:"Unravel"},420236:{color:"#F3CA63",text:"Falling Star"},428695:{color:"#A52422",text:"Mass Entanglement"},424140:{color:"#D7CDCC",text:"Supernova"},423265:{color:"#5C7457",text:"Seed of Flame"},424581:{color:"#C69B6D",text:"Fiery Growth"},420240:{color:"#638CF2",text:"Sunflame"}}}},o={};function n(t){var a=o[t];if(void 0!==a)return a.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,n),i.exports}var t={};(()=>{const e=n(293),o=n(9);getComponent=()=>{var n,t,a;reportGroup.fights.length,reportGroup.fights[0].combatantInfoEvents.length,reportGroup.fights.every((e=>0===e.encounterId));const i=reportGroup.fights.map((e=>({id:e.id,startTime:e.startTime,deaths:e.friendlyPlayerDeathEvents,casts:e.allEventsByCategoryAndDisposition("casts","enemy").filter((e=>e.ability&&void 0!==o.referenceCasts[e.ability.id]&&"cast"===e.type))}))),r=reportGroup.fights.flatMap((o=>o.eventsByCategoryAndDisposition("aurasGained","friendly").filter((o=>{var n,t;const a=Object.assign(Object.assign({},e.defensives[null!==(t=null===(n=o.target)||void 0===n?void 0:n.subType)&&void 0!==t?t:""]||{}),e.defensives.Everyone||{});return a&&null!==o.ability&&a.hasOwnProperty(o.ability.id)})).map((e=>Object.assign(Object.assign({},e),{timestamp:e.timestamp-o.startTime,startTime:o.startTime}))))),l=reportGroup.fights.flatMap((o=>o.eventsByCategoryAndDisposition("casts","friendly").filter((o=>{var n;const t=o.source,a=o.ability,i=Object.assign(Object.assign({},e.defensives[null!==(n=null==t?void 0:t.subType)&&void 0!==n?n:""]||{}),e.defensives.Everyone||{});return i&&null!==a&&i.hasOwnProperty(a.id)})).map((e=>Object.assign(Object.assign({},e),{timestamp:e.timestamp-o.startTime,startTime:o.startTime}))))),d=[],{instantCasts:c,buffMap:s}=((o,n)=>{const t=(o=>{const n={};for(const t of o){const o=t.source,a=t.ability,i=t.target;if(o&&o.name&&a&&a.id&&i){const r=Object.assign(Object.assign({},e.defensives[o.subType]||{}),e.defensives.Everyone||{}),l=o.name,d=i.name,c=a.id.toString(),s=a.name,m=t.timestamp;0===r[c].duration&&(n[l]||(n[l]={}),n[l][c]||(n[l][c]={name:s,target:d,spellId:c,casts:[],vbar:{width:1,color:r[c].color||"#FFF",label:{text:s,verticalAlign:r[c].verticalAlign||"center",textAlign:r[c].textAlign||"center",y:r[c].labelOffsetY||130,style:{color:r[c].color||"#FFF"}}}}),n[l][c].casts.push(m))}}return n})(o),a=(e=>{const o={};for(const n of e)if("applybuff"===n.type||"removebuff"===n.type){const e=n.target;if(e){const t=e.name;o[t]||(o[t]={});const a=n.ability;if(a){const e=a.id;o[t][e]||(o[t][e]={name:a.name,casts:[]});const i=o[t][e].casts,r=i[i.length-1];"applybuff"===n.type?i.push({applied:n.timestamp,removed:null}):"removebuff"===n.type&&r&&(r.removed=n.timestamp)}}}return o})(n);return{instantCasts:t,buffMap:a}})(l,r),m=i.flatMap((({id:e,startTime:n,casts:t})=>t.map((e=>{const t=e.ability,a={},i=t?o.referenceCasts[t.id].text:null,r=i&&!a[i];return r&&(a[i]=!0),{width:1,value:e.timestamp-n,color:t?o.referenceCasts[t.id].color:"",label:r?{text:i,align:"center",verticalAlign:"bottom",textAlign:"right",y:-5,x:-12,style:{color:t?o.referenceCasts[t.id].color:""}}:null}})))),u=[];for(const e in c)for(const o in c[e]){const i=c[e][o];for(const e of i.casts){const o={width:1,value:e,color:i.vbar.color,label:{text:i.name,verticalAlign:null===(n=i.vbar.label)||void 0===n?void 0:n.verticalAlign,textAlign:null===(t=i.vbar.label)||void 0===t?void 0:t.textAlign,y:null===(a=i.vbar.label)||void 0===a?void 0:a.y,style:{color:i.vbar.color}}};u.push(o)}}const f=[...m,...u],w=[];return Object.entries(s).forEach((([e,o])=>{Object.entries(o).forEach((([e,o])=>{const n=o.name;w.includes(n)||w.push(n);const t=o.casts,a={marker:{enabled:!0},name:n,id:e,data:t.map((e=>({x:e.applied,x2:e.removed,y:w.indexOf(n)})))};d.push(a)}))})),{component:"Chart",props:{chart:{type:"xrange"},title:{text:"Defensives Active"},xAxis:{min:0,title:{text:"Time in Fight"},plotLines:f,labels:{format:"{value:%M:%S}"}},yAxis:{categories:w,plotLines:f,title:{enabled:!1}},series:d}}}})(),globalThis.getComponent=t.default})();
 /*Source Code LZString compressed, Base64 encoded 
N4KABBYEQMYPYFsFwHYB00BECmAzbKAzgJYBu2hAKsQtgDbErZQBc08SqGO+RZF1WgyZh4AVzoATMCjgAXMACNsYXHDEpJUEAF8gA===
*/